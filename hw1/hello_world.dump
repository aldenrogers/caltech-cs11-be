
hello_world:     file format elf64-x86-64


Disassembly of section .interp:

0000000000000238 <.interp>:
 238:	2f                   	(bad)  
 239:	6c                   	insb   (%dx),%es:(%rdi)
 23a:	69 62 36 34 2f 6c 64 	imul   $0x646c2f34,0x36(%rdx),%esp
 241:	2d 6c 69 6e 75       	sub    $0x756e696c,%eax
 246:	78 2d                	js     275 <_init-0x2cb>
 248:	78 38                	js     282 <_init-0x2be>
 24a:	36 2d 36 34 2e 73    	ss sub $0x732e3436,%eax
 250:	6f                   	outsl  %ds:(%rsi),(%dx)
 251:	2e 32 00             	xor    %cs:(%rax),%al

Disassembly of section .note.ABI-tag:

0000000000000254 <.note.ABI-tag>:
 254:	04 00                	add    $0x0,%al
 256:	00 00                	add    %al,(%rax)
 258:	10 00                	adc    %al,(%rax)
 25a:	00 00                	add    %al,(%rax)
 25c:	01 00                	add    %eax,(%rax)
 25e:	00 00                	add    %al,(%rax)
 260:	47                   	rex.RXB
 261:	4e 55                	rex.WRX push %rbp
 263:	00 00                	add    %al,(%rax)
 265:	00 00                	add    %al,(%rax)
 267:	00 03                	add    %al,(%rbx)
 269:	00 00                	add    %al,(%rax)
 26b:	00 02                	add    %al,(%rdx)
 26d:	00 00                	add    %al,(%rax)
 26f:	00 00                	add    %al,(%rax)
 271:	00 00                	add    %al,(%rax)
	...

Disassembly of section .note.gnu.build-id:

0000000000000274 <.note.gnu.build-id>:
 274:	04 00                	add    $0x0,%al
 276:	00 00                	add    %al,(%rax)
 278:	14 00                	adc    $0x0,%al
 27a:	00 00                	add    %al,(%rax)
 27c:	03 00                	add    (%rax),%eax
 27e:	00 00                	add    %al,(%rax)
 280:	47                   	rex.RXB
 281:	4e 55                	rex.WRX push %rbp
 283:	00 27                	add    %ah,(%rdi)
 285:	16                   	(bad)  
 286:	84 72 94             	test   %dh,-0x6c(%rdx)
 289:	c2 77 21             	retq   $0x2177
 28c:	45 ed                	rex.RB in (%dx),%eax
 28e:	7e 45                	jle    2d5 <_init-0x26b>
 290:	64 15 3e a1 7b b7    	fs adc $0xb77ba13e,%eax
 296:	f8                   	clc    
 297:	0b                   	.byte 0xb

Disassembly of section .gnu.hash:

0000000000000298 <.gnu.hash>:
 298:	01 00                	add    %eax,(%rax)
 29a:	00 00                	add    %al,(%rax)
 29c:	01 00                	add    %eax,(%rax)
 29e:	00 00                	add    %al,(%rax)
 2a0:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .dynsym:

00000000000002b8 <.dynsym>:
	...
 2d0:	44 00 00             	add    %r8b,(%rax)
 2d3:	00 20                	add    %ah,(%rax)
	...
 2e5:	00 00                	add    %al,(%rax)
 2e7:	00 0b                	add    %cl,(%rbx)
 2e9:	00 00                	add    %al,(%rax)
 2eb:	00 12                	add    %dl,(%rdx)
	...
 2fd:	00 00                	add    %al,(%rax)
 2ff:	00 10                	add    %dl,(%rax)
 301:	00 00                	add    %al,(%rax)
 303:	00 12                	add    %dl,(%rdx)
	...
 315:	00 00                	add    %al,(%rax)
 317:	00 26                	add    %ah,(%rsi)
 319:	00 00                	add    %al,(%rax)
 31b:	00 12                	add    %dl,(%rdx)
	...
 32d:	00 00                	add    %al,(%rax)
 32f:	00 60 00             	add    %ah,0x0(%rax)
 332:	00 00                	add    %al,(%rax)
 334:	20 00                	and    %al,(%rax)
	...
 346:	00 00                	add    %al,(%rax)
 348:	6f                   	outsl  %ds:(%rsi),(%dx)
 349:	00 00                	add    %al,(%rax)
 34b:	00 20                	add    %ah,(%rax)
	...
 35d:	00 00                	add    %al,(%rax)
 35f:	00 17                	add    %dl,(%rdi)
 361:	00 00                	add    %al,(%rax)
 363:	00 22                	add    %ah,(%rdx)
	...

Disassembly of section .dynstr:

0000000000000378 <.dynstr>:
 378:	00 6c 69 62          	add    %ch,0x62(%rcx,%rbp,2)
 37c:	63 2e                	movslq (%rsi),%ebp
 37e:	73 6f                	jae    3ef <_init-0x151>
 380:	2e 36 00 70 75       	cs add %dh,%ss:0x75(%rax)
 385:	74 73                	je     3fa <_init-0x146>
 387:	00 70 72             	add    %dh,0x72(%rax)
 38a:	69 6e 74 66 00 5f 5f 	imul   $0x5f5f0066,0x74(%rsi),%ebp
 391:	63 78 61             	movslq 0x61(%rax),%edi
 394:	5f                   	pop    %rdi
 395:	66 69 6e 61 6c 69    	imul   $0x696c,0x61(%rsi),%bp
 39b:	7a 65                	jp     402 <_init-0x13e>
 39d:	00 5f 5f             	add    %bl,0x5f(%rdi)
 3a0:	6c                   	insb   (%dx),%es:(%rdi)
 3a1:	69 62 63 5f 73 74 61 	imul   $0x6174735f,0x63(%rdx),%esp
 3a8:	72 74                	jb     41e <_init-0x122>
 3aa:	5f                   	pop    %rdi
 3ab:	6d                   	insl   (%dx),%es:(%rdi)
 3ac:	61                   	(bad)  
 3ad:	69 6e 00 47 4c 49 42 	imul   $0x42494c47,0x0(%rsi),%ebp
 3b4:	43 5f                	rex.XB pop %r15
 3b6:	32 2e                	xor    (%rsi),%ch
 3b8:	32 2e                	xor    (%rsi),%ch
 3ba:	35 00 5f 49 54       	xor    $0x54495f00,%eax
 3bf:	4d 5f                	rex.WRB pop %r15
 3c1:	64 65 72 65          	fs gs jb 42a <_init-0x116>
 3c5:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 3cc:	4d 
 3cd:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 3cf:	6f                   	outsl  %ds:(%rsi),(%dx)
 3d0:	6e                   	outsb  %ds:(%rsi),(%dx)
 3d1:	65 54                	gs push %rsp
 3d3:	61                   	(bad)  
 3d4:	62                   	(bad)  
 3d5:	6c                   	insb   (%dx),%es:(%rdi)
 3d6:	65 00 5f 5f          	add    %bl,%gs:0x5f(%rdi)
 3da:	67 6d                	insl   (%dx),%es:(%edi)
 3dc:	6f                   	outsl  %ds:(%rsi),(%dx)
 3dd:	6e                   	outsb  %ds:(%rsi),(%dx)
 3de:	5f                   	pop    %rdi
 3df:	73 74                	jae    455 <_init-0xeb>
 3e1:	61                   	(bad)  
 3e2:	72 74                	jb     458 <_init-0xe8>
 3e4:	5f                   	pop    %rdi
 3e5:	5f                   	pop    %rdi
 3e6:	00 5f 49             	add    %bl,0x49(%rdi)
 3e9:	54                   	push   %rsp
 3ea:	4d 5f                	rex.WRB pop %r15
 3ec:	72 65                	jb     453 <_init-0xed>
 3ee:	67 69 73 74 65 72 54 	imul   $0x4d547265,0x74(%ebx),%esi
 3f5:	4d 
 3f6:	43 6c                	rex.XB insb (%dx),%es:(%rdi)
 3f8:	6f                   	outsl  %ds:(%rsi),(%dx)
 3f9:	6e                   	outsb  %ds:(%rsi),(%dx)
 3fa:	65 54                	gs push %rsp
 3fc:	61                   	(bad)  
 3fd:	62                   	.byte 0x62
 3fe:	6c                   	insb   (%dx),%es:(%rdi)
 3ff:	65                   	gs
	...

Disassembly of section .gnu.version:

0000000000000402 <.gnu.version>:
 402:	00 00                	add    %al,(%rax)
 404:	00 00                	add    %al,(%rax)
 406:	02 00                	add    (%rax),%al
 408:	02 00                	add    (%rax),%al
 40a:	02 00                	add    (%rax),%al
 40c:	00 00                	add    %al,(%rax)
 40e:	00 00                	add    %al,(%rax)
 410:	02 00                	add    (%rax),%al

Disassembly of section .gnu.version_r:

0000000000000418 <.gnu.version_r>:
 418:	01 00                	add    %eax,(%rax)
 41a:	01 00                	add    %eax,(%rax)
 41c:	01 00                	add    %eax,(%rax)
 41e:	00 00                	add    %al,(%rax)
 420:	10 00                	adc    %al,(%rax)
 422:	00 00                	add    %al,(%rax)
 424:	00 00                	add    %al,(%rax)
 426:	00 00                	add    %al,(%rax)
 428:	75 1a                	jne    444 <_init-0xfc>
 42a:	69 09 00 00 02 00    	imul   $0x20000,(%rcx),%ecx
 430:	38 00                	cmp    %al,(%rax)
 432:	00 00                	add    %al,(%rax)
 434:	00 00                	add    %al,(%rax)
	...

Disassembly of section .rela.dyn:

0000000000000438 <.rela.dyn>:
 438:	e0 0d                	loopne 447 <_init-0xf9>
 43a:	20 00                	and    %al,(%rax)
 43c:	00 00                	add    %al,(%rax)
 43e:	00 00                	add    %al,(%rax)
 440:	08 00                	or     %al,(%rax)
 442:	00 00                	add    %al,(%rax)
 444:	00 00                	add    %al,(%rax)
 446:	00 00                	add    %al,(%rax)
 448:	90                   	nop
 449:	06                   	(bad)  
 44a:	00 00                	add    %al,(%rax)
 44c:	00 00                	add    %al,(%rax)
 44e:	00 00                	add    %al,(%rax)
 450:	e8 0d 20 00 00       	callq  2462 <__FRAME_END__+0x1b66>
 455:	00 00                	add    %al,(%rax)
 457:	00 08                	add    %cl,(%rax)
 459:	00 00                	add    %al,(%rax)
 45b:	00 00                	add    %al,(%rax)
 45d:	00 00                	add    %al,(%rax)
 45f:	00 50 06             	add    %dl,0x6(%rax)
 462:	00 00                	add    %al,(%rax)
 464:	00 00                	add    %al,(%rax)
 466:	00 00                	add    %al,(%rax)
 468:	f8                   	clc    
 469:	0f 20 00             	mov    %cr0,%rax
 46c:	00 00                	add    %al,(%rax)
 46e:	00 00                	add    %al,(%rax)
 470:	08 00                	or     %al,(%rax)
 472:	00 00                	add    %al,(%rax)
 474:	00 00                	add    %al,(%rax)
 476:	00 00                	add    %al,(%rax)
 478:	40 05 00 00 00 00    	rex add $0x0,%eax
 47e:	00 00                	add    %al,(%rax)
 480:	30 10                	xor    %dl,(%rax)
 482:	20 00                	and    %al,(%rax)
 484:	00 00                	add    %al,(%rax)
 486:	00 00                	add    %al,(%rax)
 488:	08 00                	or     %al,(%rax)
 48a:	00 00                	add    %al,(%rax)
 48c:	00 00                	add    %al,(%rax)
 48e:	00 00                	add    %al,(%rax)
 490:	30 10                	xor    %dl,(%rax)
 492:	20 00                	and    %al,(%rax)
 494:	00 00                	add    %al,(%rax)
 496:	00 00                	add    %al,(%rax)
 498:	d0 0f                	rorb   (%rdi)
 49a:	20 00                	and    %al,(%rax)
 49c:	00 00                	add    %al,(%rax)
 49e:	00 00                	add    %al,(%rax)
 4a0:	06                   	(bad)  
 4a1:	00 00                	add    %al,(%rax)
 4a3:	00 01                	add    %al,(%rcx)
	...
 4ad:	00 00                	add    %al,(%rax)
 4af:	00 d8                	add    %bl,%al
 4b1:	0f 20 00             	mov    %cr0,%rax
 4b4:	00 00                	add    %al,(%rax)
 4b6:	00 00                	add    %al,(%rax)
 4b8:	06                   	(bad)  
 4b9:	00 00                	add    %al,(%rax)
 4bb:	00 04 00             	add    %al,(%rax,%rax,1)
	...
 4c6:	00 00                	add    %al,(%rax)
 4c8:	e0 0f                	loopne 4d9 <_init-0x67>
 4ca:	20 00                	and    %al,(%rax)
 4cc:	00 00                	add    %al,(%rax)
 4ce:	00 00                	add    %al,(%rax)
 4d0:	06                   	(bad)  
 4d1:	00 00                	add    %al,(%rax)
 4d3:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 4d9 <_init-0x67>
 4d9:	00 00                	add    %al,(%rax)
 4db:	00 00                	add    %al,(%rax)
 4dd:	00 00                	add    %al,(%rax)
 4df:	00 e8                	add    %ch,%al
 4e1:	0f 20 00             	mov    %cr0,%rax
 4e4:	00 00                	add    %al,(%rax)
 4e6:	00 00                	add    %al,(%rax)
 4e8:	06                   	(bad)  
 4e9:	00 00                	add    %al,(%rax)
 4eb:	00 06                	add    %al,(%rsi)
	...
 4f5:	00 00                	add    %al,(%rax)
 4f7:	00 f0                	add    %dh,%al
 4f9:	0f 20 00             	mov    %cr0,%rax
 4fc:	00 00                	add    %al,(%rax)
 4fe:	00 00                	add    %al,(%rax)
 500:	06                   	(bad)  
 501:	00 00                	add    %al,(%rax)
 503:	00 07                	add    %al,(%rdi)
	...

Disassembly of section .rela.plt:

0000000000000510 <.rela.plt>:
 510:	18 10                	sbb    %dl,(%rax)
 512:	20 00                	and    %al,(%rax)
 514:	00 00                	add    %al,(%rax)
 516:	00 00                	add    %al,(%rax)
 518:	07                   	(bad)  
 519:	00 00                	add    %al,(%rax)
 51b:	00 02                	add    %al,(%rdx)
	...
 525:	00 00                	add    %al,(%rax)
 527:	00 20                	add    %ah,(%rax)
 529:	10 20                	adc    %ah,(%rax)
 52b:	00 00                	add    %al,(%rax)
 52d:	00 00                	add    %al,(%rax)
 52f:	00 07                	add    %al,(%rdi)
 531:	00 00                	add    %al,(%rax)
 533:	00 03                	add    %al,(%rbx)
	...

Disassembly of section .init:

0000000000000540 <_init>:
 540:	48 83 ec 08          	sub    $0x8,%rsp
 544:	48 8b 05 95 0a 20 00 	mov    0x200a95(%rip),%rax        # 200fe0 <__gmon_start__>
 54b:	48 85 c0             	test   %rax,%rax
 54e:	74 02                	je     552 <_init+0x12>
 550:	ff d0                	callq  *%rax
 552:	48 83 c4 08          	add    $0x8,%rsp
 556:	c3                   	retq   

Disassembly of section .plt:

0000000000000560 <.plt>:
 560:	ff 35 a2 0a 20 00    	pushq  0x200aa2(%rip)        # 201008 <_GLOBAL_OFFSET_TABLE_+0x8>
 566:	ff 25 a4 0a 20 00    	jmpq   *0x200aa4(%rip)        # 201010 <_GLOBAL_OFFSET_TABLE_+0x10>
 56c:	0f 1f 40 00          	nopl   0x0(%rax)

0000000000000570 <puts@plt>:
 570:	ff 25 a2 0a 20 00    	jmpq   *0x200aa2(%rip)        # 201018 <puts@GLIBC_2.2.5>
 576:	68 00 00 00 00       	pushq  $0x0
 57b:	e9 e0 ff ff ff       	jmpq   560 <.plt>

0000000000000580 <printf@plt>:
 580:	ff 25 9a 0a 20 00    	jmpq   *0x200a9a(%rip)        # 201020 <printf@GLIBC_2.2.5>
 586:	68 01 00 00 00       	pushq  $0x1
 58b:	e9 d0 ff ff ff       	jmpq   560 <.plt>

Disassembly of section .text:

0000000000000590 <_start>:
 590:	31 ed                	xor    %ebp,%ebp
 592:	49 89 d1             	mov    %rdx,%r9
 595:	5e                   	pop    %rsi
 596:	48 89 e2             	mov    %rsp,%rdx
 599:	48 83 e4 f0          	and    $0xfffffffffffffff0,%rsp
 59d:	50                   	push   %rax
 59e:	54                   	push   %rsp
 59f:	4c 8d 05 ea 01 00 00 	lea    0x1ea(%rip),%r8        # 790 <__libc_csu_fini>
 5a6:	48 8d 0d 73 01 00 00 	lea    0x173(%rip),%rcx        # 720 <__libc_csu_init>
 5ad:	48 8d 3d e6 00 00 00 	lea    0xe6(%rip),%rdi        # 69a <main>
 5b4:	ff 15 1e 0a 20 00    	callq  *0x200a1e(%rip)        # 200fd8 <__libc_start_main@GLIBC_2.2.5>
 5ba:	f4                   	hlt    
 5bb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000000005c0 <deregister_tm_clones>:
 5c0:	48 8d 3d 71 0a 20 00 	lea    0x200a71(%rip),%rdi        # 201038 <__TMC_END__>
 5c7:	55                   	push   %rbp
 5c8:	48 8d 05 69 0a 20 00 	lea    0x200a69(%rip),%rax        # 201038 <__TMC_END__>
 5cf:	48 39 f8             	cmp    %rdi,%rax
 5d2:	48 89 e5             	mov    %rsp,%rbp
 5d5:	74 19                	je     5f0 <deregister_tm_clones+0x30>
 5d7:	48 8b 05 f2 09 20 00 	mov    0x2009f2(%rip),%rax        # 200fd0 <_ITM_deregisterTMCloneTable>
 5de:	48 85 c0             	test   %rax,%rax
 5e1:	74 0d                	je     5f0 <deregister_tm_clones+0x30>
 5e3:	5d                   	pop    %rbp
 5e4:	ff e0                	jmpq   *%rax
 5e6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 5ed:	00 00 00 
 5f0:	5d                   	pop    %rbp
 5f1:	c3                   	retq   
 5f2:	0f 1f 40 00          	nopl   0x0(%rax)
 5f6:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 5fd:	00 00 00 

0000000000000600 <register_tm_clones>:
 600:	48 8d 3d 31 0a 20 00 	lea    0x200a31(%rip),%rdi        # 201038 <__TMC_END__>
 607:	48 8d 35 2a 0a 20 00 	lea    0x200a2a(%rip),%rsi        # 201038 <__TMC_END__>
 60e:	55                   	push   %rbp
 60f:	48 29 fe             	sub    %rdi,%rsi
 612:	48 89 e5             	mov    %rsp,%rbp
 615:	48 c1 fe 03          	sar    $0x3,%rsi
 619:	48 89 f0             	mov    %rsi,%rax
 61c:	48 c1 e8 3f          	shr    $0x3f,%rax
 620:	48 01 c6             	add    %rax,%rsi
 623:	48 d1 fe             	sar    %rsi
 626:	74 18                	je     640 <register_tm_clones+0x40>
 628:	48 8b 05 b9 09 20 00 	mov    0x2009b9(%rip),%rax        # 200fe8 <_ITM_registerTMCloneTable>
 62f:	48 85 c0             	test   %rax,%rax
 632:	74 0c                	je     640 <register_tm_clones+0x40>
 634:	5d                   	pop    %rbp
 635:	ff e0                	jmpq   *%rax
 637:	66 0f 1f 84 00 00 00 	nopw   0x0(%rax,%rax,1)
 63e:	00 00 
 640:	5d                   	pop    %rbp
 641:	c3                   	retq   
 642:	0f 1f 40 00          	nopl   0x0(%rax)
 646:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 64d:	00 00 00 

0000000000000650 <__do_global_dtors_aux>:
 650:	80 3d e1 09 20 00 00 	cmpb   $0x0,0x2009e1(%rip)        # 201038 <__TMC_END__>
 657:	75 2f                	jne    688 <__do_global_dtors_aux+0x38>
 659:	48 83 3d 8f 09 20 00 	cmpq   $0x0,0x20098f(%rip)        # 200ff0 <__cxa_finalize@GLIBC_2.2.5>
 660:	00 
 661:	55                   	push   %rbp
 662:	48 89 e5             	mov    %rsp,%rbp
 665:	74 0d                	je     674 <__do_global_dtors_aux+0x24>
 667:	48 8b 3d c2 09 20 00 	mov    0x2009c2(%rip),%rdi        # 201030 <__dso_handle>
 66e:	ff 15 7c 09 20 00    	callq  *0x20097c(%rip)        # 200ff0 <__cxa_finalize@GLIBC_2.2.5>
 674:	e8 47 ff ff ff       	callq  5c0 <deregister_tm_clones>
 679:	c6 05 b8 09 20 00 01 	movb   $0x1,0x2009b8(%rip)        # 201038 <__TMC_END__>
 680:	5d                   	pop    %rbp
 681:	c3                   	retq   
 682:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)
 688:	f3 c3                	repz retq 
 68a:	66 0f 1f 44 00 00    	nopw   0x0(%rax,%rax,1)

0000000000000690 <frame_dummy>:
 690:	55                   	push   %rbp
 691:	48 89 e5             	mov    %rsp,%rbp
 694:	5d                   	pop    %rbp
 695:	e9 66 ff ff ff       	jmpq   600 <register_tm_clones>

000000000000069a <main>:
 69a:	55                   	push   %rbp
 69b:	48 89 e5             	mov    %rsp,%rbp
 69e:	48 83 ec 20          	sub    $0x20,%rsp
 6a2:	89 7d ec             	mov    %edi,-0x14(%rbp)
 6a5:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
 6a9:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%rbp)
 6b0:	48 8d 3d ed 00 00 00 	lea    0xed(%rip),%rdi        # 7a4 <_IO_stdin_used+0x4>
 6b7:	e8 b4 fe ff ff       	callq  570 <puts@plt>
 6bc:	8b 45 ec             	mov    -0x14(%rbp),%eax
 6bf:	89 c6                	mov    %eax,%esi
 6c1:	48 8d 3d e9 00 00 00 	lea    0xe9(%rip),%rdi        # 7b1 <_IO_stdin_used+0x11>
 6c8:	b8 00 00 00 00       	mov    $0x0,%eax
 6cd:	e8 ae fe ff ff       	callq  580 <printf@plt>
 6d2:	48 8d 3d ec 00 00 00 	lea    0xec(%rip),%rdi        # 7c5 <_IO_stdin_used+0x25>
 6d9:	e8 92 fe ff ff       	callq  570 <puts@plt>
 6de:	eb 2f                	jmp    70f <main+0x75>
 6e0:	8b 45 fc             	mov    -0x4(%rbp),%eax
 6e3:	48 98                	cltq   
 6e5:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
 6ec:	00 
 6ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 6f1:	48 01 d0             	add    %rdx,%rax
 6f4:	48 8b 00             	mov    (%rax),%rax
 6f7:	48 89 c6             	mov    %rax,%rsi
 6fa:	48 8d 3d cf 00 00 00 	lea    0xcf(%rip),%rdi        # 7d0 <_IO_stdin_used+0x30>
 701:	b8 00 00 00 00       	mov    $0x0,%eax
 706:	e8 75 fe ff ff       	callq  580 <printf@plt>
 70b:	83 45 fc 01          	addl   $0x1,-0x4(%rbp)
 70f:	8b 45 fc             	mov    -0x4(%rbp),%eax
 712:	3b 45 ec             	cmp    -0x14(%rbp),%eax
 715:	7c c9                	jl     6e0 <main+0x46>
 717:	b8 00 00 00 00       	mov    $0x0,%eax
 71c:	c9                   	leaveq 
 71d:	c3                   	retq   
 71e:	66 90                	xchg   %ax,%ax

0000000000000720 <__libc_csu_init>:
 720:	41 57                	push   %r15
 722:	41 56                	push   %r14
 724:	49 89 d7             	mov    %rdx,%r15
 727:	41 55                	push   %r13
 729:	41 54                	push   %r12
 72b:	4c 8d 25 ae 06 20 00 	lea    0x2006ae(%rip),%r12        # 200de0 <__frame_dummy_init_array_entry>
 732:	55                   	push   %rbp
 733:	48 8d 2d ae 06 20 00 	lea    0x2006ae(%rip),%rbp        # 200de8 <__init_array_end>
 73a:	53                   	push   %rbx
 73b:	41 89 fd             	mov    %edi,%r13d
 73e:	49 89 f6             	mov    %rsi,%r14
 741:	4c 29 e5             	sub    %r12,%rbp
 744:	48 83 ec 08          	sub    $0x8,%rsp
 748:	48 c1 fd 03          	sar    $0x3,%rbp
 74c:	ff 15 a6 08 20 00    	callq  *0x2008a6(%rip)        # 200ff8 <.got+0x28>
 752:	48 85 ed             	test   %rbp,%rbp
 755:	74 1f                	je     776 <__libc_csu_init+0x56>
 757:	31 db                	xor    %ebx,%ebx
 759:	0f 1f 80 00 00 00 00 	nopl   0x0(%rax)
 760:	4c 89 fa             	mov    %r15,%rdx
 763:	4c 89 f6             	mov    %r14,%rsi
 766:	44 89 ef             	mov    %r13d,%edi
 769:	41 ff 14 dc          	callq  *(%r12,%rbx,8)
 76d:	48 83 c3 01          	add    $0x1,%rbx
 771:	48 39 dd             	cmp    %rbx,%rbp
 774:	75 ea                	jne    760 <__libc_csu_init+0x40>
 776:	48 83 c4 08          	add    $0x8,%rsp
 77a:	5b                   	pop    %rbx
 77b:	5d                   	pop    %rbp
 77c:	41 5c                	pop    %r12
 77e:	41 5d                	pop    %r13
 780:	41 5e                	pop    %r14
 782:	41 5f                	pop    %r15
 784:	c3                   	retq   
 785:	90                   	nop
 786:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 78d:	00 00 00 

0000000000000790 <__libc_csu_fini>:
 790:	f3 c3                	repz retq 

Disassembly of section .fini:

0000000000000794 <_fini>:
 794:	48 83 ec 08          	sub    $0x8,%rsp
 798:	48 83 c4 08          	add    $0x8,%rsp
 79c:	c3                   	retq   

Disassembly of section .rodata:

00000000000007a0 <_IO_stdin_used>:
 7a0:	01 00                	add    %eax,(%rax)
 7a2:	02 00                	add    (%rax),%al
 7a4:	48                   	rex.W
 7a5:	65 6c                	gs insb (%dx),%es:(%rdi)
 7a7:	6c                   	insb   (%dx),%es:(%rdi)
 7a8:	6f                   	outsl  %ds:(%rsi),(%dx)
 7a9:	20 77 6f             	and    %dh,0x6f(%rdi)
 7ac:	72 6c                	jb     81a <__GNU_EH_FRAME_HDR+0x42>
 7ae:	64 21 00             	and    %eax,%fs:(%rax)
 7b1:	23 20                	and    (%rax),%esp
 7b3:	6f                   	outsl  %ds:(%rsi),(%dx)
 7b4:	66 20 61 72          	data16 and %ah,0x72(%rcx)
 7b8:	67 75 6d             	addr32 jne 828 <__GNU_EH_FRAME_HDR+0x50>
 7bb:	65 6e                	outsb  %gs:(%rsi),(%dx)
 7bd:	74 73                	je     832 <__GNU_EH_FRAME_HDR+0x5a>
 7bf:	3a 20                	cmp    (%rax),%ah
 7c1:	25 64 0a 00 41       	and    $0x41000a64,%eax
 7c6:	72 67                	jb     82f <__GNU_EH_FRAME_HDR+0x57>
 7c8:	75 6d                	jne    837 <__GNU_EH_FRAME_HDR+0x5f>
 7ca:	65 6e                	outsb  %gs:(%rsi),(%dx)
 7cc:	74 73                	je     841 <__GNU_EH_FRAME_HDR+0x69>
 7ce:	3a 00                	cmp    (%rax),%al
 7d0:	20 20                	and    %ah,(%rax)
 7d2:	5b                   	pop    %rbx
 7d3:	25 73 5d 0a 00       	and    $0xa5d73,%eax

Disassembly of section .eh_frame_hdr:

00000000000007d8 <__GNU_EH_FRAME_HDR>:
 7d8:	01 1b                	add    %ebx,(%rbx)
 7da:	03 3b                	add    (%rbx),%edi
 7dc:	34 00                	xor    $0x0,%al
 7de:	00 00                	add    %al,(%rax)
 7e0:	05 00 00 00 88       	add    $0x88000000,%eax
 7e5:	fd                   	std    
 7e6:	ff                   	(bad)  
 7e7:	ff 80 00 00 00 b8    	incl   -0x48000000(%rax)
 7ed:	fd                   	std    
 7ee:	ff                   	(bad)  
 7ef:	ff 50 00             	callq  *0x0(%rax)
 7f2:	00 00                	add    %al,(%rax)
 7f4:	c2 fe ff             	retq   $0xfffe
 7f7:	ff a8 00 00 00 48    	ljmp   *0x48000000(%rax)
 7fd:	ff                   	(bad)  
 7fe:	ff                   	(bad)  
 7ff:	ff c8                	dec    %eax
 801:	00 00                	add    %al,(%rax)
 803:	00 b8 ff ff ff 10    	add    %bh,0x10ffffff(%rax)
 809:	01 00                	add    %eax,(%rax)
	...

Disassembly of section .eh_frame:

0000000000000810 <__FRAME_END__-0xec>:
 810:	14 00                	adc    $0x0,%al
 812:	00 00                	add    %al,(%rax)
 814:	00 00                	add    %al,(%rax)
 816:	00 00                	add    %al,(%rax)
 818:	01 7a 52             	add    %edi,0x52(%rdx)
 81b:	00 01                	add    %al,(%rcx)
 81d:	78 10                	js     82f <__GNU_EH_FRAME_HDR+0x57>
 81f:	01 1b                	add    %ebx,(%rbx)
 821:	0c 07                	or     $0x7,%al
 823:	08 90 01 07 10 14    	or     %dl,0x14100701(%rax)
 829:	00 00                	add    %al,(%rax)
 82b:	00 1c 00             	add    %bl,(%rax,%rax,1)
 82e:	00 00                	add    %al,(%rax)
 830:	60                   	(bad)  
 831:	fd                   	std    
 832:	ff                   	(bad)  
 833:	ff 2b                	ljmp   *(%rbx)
	...
 83d:	00 00                	add    %al,(%rax)
 83f:	00 14 00             	add    %dl,(%rax,%rax,1)
 842:	00 00                	add    %al,(%rax)
 844:	00 00                	add    %al,(%rax)
 846:	00 00                	add    %al,(%rax)
 848:	01 7a 52             	add    %edi,0x52(%rdx)
 84b:	00 01                	add    %al,(%rcx)
 84d:	78 10                	js     85f <__GNU_EH_FRAME_HDR+0x87>
 84f:	01 1b                	add    %ebx,(%rbx)
 851:	0c 07                	or     $0x7,%al
 853:	08 90 01 00 00 24    	or     %dl,0x24000001(%rax)
 859:	00 00                	add    %al,(%rax)
 85b:	00 1c 00             	add    %bl,(%rax,%rax,1)
 85e:	00 00                	add    %al,(%rax)
 860:	00 fd                	add    %bh,%ch
 862:	ff                   	(bad)  
 863:	ff 30                	pushq  (%rax)
 865:	00 00                	add    %al,(%rax)
 867:	00 00                	add    %al,(%rax)
 869:	0e                   	(bad)  
 86a:	10 46 0e             	adc    %al,0xe(%rsi)
 86d:	18 4a 0f             	sbb    %cl,0xf(%rdx)
 870:	0b 77 08             	or     0x8(%rdi),%esi
 873:	80 00 3f             	addb   $0x3f,(%rax)
 876:	1a 3b                	sbb    (%rbx),%bh
 878:	2a 33                	sub    (%rbx),%dh
 87a:	24 22                	and    $0x22,%al
 87c:	00 00                	add    %al,(%rax)
 87e:	00 00                	add    %al,(%rax)
 880:	1c 00                	sbb    $0x0,%al
 882:	00 00                	add    %al,(%rax)
 884:	44 00 00             	add    %r8b,(%rax)
 887:	00 12                	add    %dl,(%rdx)
 889:	fe                   	(bad)  
 88a:	ff                   	(bad)  
 88b:	ff 84 00 00 00 00 41 	incl   0x41000000(%rax,%rax,1)
 892:	0e                   	(bad)  
 893:	10 86 02 43 0d 06    	adc    %al,0x60d4302(%rsi)
 899:	02 7f 0c             	add    0xc(%rdi),%bh
 89c:	07                   	(bad)  
 89d:	08 00                	or     %al,(%rax)
 89f:	00 44 00 00          	add    %al,0x0(%rax,%rax,1)
 8a3:	00 64 00 00          	add    %ah,0x0(%rax,%rax,1)
 8a7:	00 78 fe             	add    %bh,-0x2(%rax)
 8aa:	ff                   	(bad)  
 8ab:	ff 65 00             	jmpq   *0x0(%rbp)
 8ae:	00 00                	add    %al,(%rax)
 8b0:	00 42 0e             	add    %al,0xe(%rdx)
 8b3:	10 8f 02 42 0e 18    	adc    %cl,0x180e4202(%rdi)
 8b9:	8e 03                	mov    (%rbx),%es
 8bb:	45 0e                	rex.RB (bad) 
 8bd:	20 8d 04 42 0e 28    	and    %cl,0x280e4204(%rbp)
 8c3:	8c 05 48 0e 30 86    	mov    %es,-0x79cff1b8(%rip)        # ffffffff86301711 <_end+0xffffffff861006d1>
 8c9:	06                   	(bad)  
 8ca:	48 0e                	rex.W (bad) 
 8cc:	38 83 07 4d 0e 40    	cmp    %al,0x400e4d07(%rbx)
 8d2:	72 0e                	jb     8e2 <__GNU_EH_FRAME_HDR+0x10a>
 8d4:	38 41 0e             	cmp    %al,0xe(%rcx)
 8d7:	30 41 0e             	xor    %al,0xe(%rcx)
 8da:	28 42 0e             	sub    %al,0xe(%rdx)
 8dd:	20 42 0e             	and    %al,0xe(%rdx)
 8e0:	18 42 0e             	sbb    %al,0xe(%rdx)
 8e3:	10 42 0e             	adc    %al,0xe(%rdx)
 8e6:	08 00                	or     %al,(%rax)
 8e8:	10 00                	adc    %al,(%rax)
 8ea:	00 00                	add    %al,(%rax)
 8ec:	ac                   	lods   %ds:(%rsi),%al
 8ed:	00 00                	add    %al,(%rax)
 8ef:	00 a0 fe ff ff 02    	add    %ah,0x2fffffe(%rax)
 8f5:	00 00                	add    %al,(%rax)
 8f7:	00 00                	add    %al,(%rax)
 8f9:	00 00                	add    %al,(%rax)
	...

00000000000008fc <__FRAME_END__>:
 8fc:	00 00                	add    %al,(%rax)
	...

Disassembly of section .init_array:

0000000000200de0 <__frame_dummy_init_array_entry>:
  200de0:	90                   	nop
  200de1:	06                   	(bad)  
  200de2:	00 00                	add    %al,(%rax)
  200de4:	00 00                	add    %al,(%rax)
	...

Disassembly of section .fini_array:

0000000000200de8 <__do_global_dtors_aux_fini_array_entry>:
  200de8:	50                   	push   %rax
  200de9:	06                   	(bad)  
  200dea:	00 00                	add    %al,(%rax)
  200dec:	00 00                	add    %al,(%rax)
	...

Disassembly of section .dynamic:

0000000000200df0 <_DYNAMIC>:
  200df0:	01 00                	add    %eax,(%rax)
  200df2:	00 00                	add    %al,(%rax)
  200df4:	00 00                	add    %al,(%rax)
  200df6:	00 00                	add    %al,(%rax)
  200df8:	01 00                	add    %eax,(%rax)
  200dfa:	00 00                	add    %al,(%rax)
  200dfc:	00 00                	add    %al,(%rax)
  200dfe:	00 00                	add    %al,(%rax)
  200e00:	0c 00                	or     $0x0,%al
  200e02:	00 00                	add    %al,(%rax)
  200e04:	00 00                	add    %al,(%rax)
  200e06:	00 00                	add    %al,(%rax)
  200e08:	40 05 00 00 00 00    	rex add $0x0,%eax
  200e0e:	00 00                	add    %al,(%rax)
  200e10:	0d 00 00 00 00       	or     $0x0,%eax
  200e15:	00 00                	add    %al,(%rax)
  200e17:	00 94 07 00 00 00 00 	add    %dl,0x0(%rdi,%rax,1)
  200e1e:	00 00                	add    %al,(%rax)
  200e20:	19 00                	sbb    %eax,(%rax)
  200e22:	00 00                	add    %al,(%rax)
  200e24:	00 00                	add    %al,(%rax)
  200e26:	00 00                	add    %al,(%rax)
  200e28:	e0 0d                	loopne 200e37 <_DYNAMIC+0x47>
  200e2a:	20 00                	and    %al,(%rax)
  200e2c:	00 00                	add    %al,(%rax)
  200e2e:	00 00                	add    %al,(%rax)
  200e30:	1b 00                	sbb    (%rax),%eax
  200e32:	00 00                	add    %al,(%rax)
  200e34:	00 00                	add    %al,(%rax)
  200e36:	00 00                	add    %al,(%rax)
  200e38:	08 00                	or     %al,(%rax)
  200e3a:	00 00                	add    %al,(%rax)
  200e3c:	00 00                	add    %al,(%rax)
  200e3e:	00 00                	add    %al,(%rax)
  200e40:	1a 00                	sbb    (%rax),%al
  200e42:	00 00                	add    %al,(%rax)
  200e44:	00 00                	add    %al,(%rax)
  200e46:	00 00                	add    %al,(%rax)
  200e48:	e8 0d 20 00 00       	callq  202e5a <_end+0x1e1a>
  200e4d:	00 00                	add    %al,(%rax)
  200e4f:	00 1c 00             	add    %bl,(%rax,%rax,1)
  200e52:	00 00                	add    %al,(%rax)
  200e54:	00 00                	add    %al,(%rax)
  200e56:	00 00                	add    %al,(%rax)
  200e58:	08 00                	or     %al,(%rax)
  200e5a:	00 00                	add    %al,(%rax)
  200e5c:	00 00                	add    %al,(%rax)
  200e5e:	00 00                	add    %al,(%rax)
  200e60:	f5                   	cmc    
  200e61:	fe                   	(bad)  
  200e62:	ff 6f 00             	ljmp   *0x0(%rdi)
  200e65:	00 00                	add    %al,(%rax)
  200e67:	00 98 02 00 00 00    	add    %bl,0x2(%rax)
  200e6d:	00 00                	add    %al,(%rax)
  200e6f:	00 05 00 00 00 00    	add    %al,0x0(%rip)        # 200e75 <_DYNAMIC+0x85>
  200e75:	00 00                	add    %al,(%rax)
  200e77:	00 78 03             	add    %bh,0x3(%rax)
  200e7a:	00 00                	add    %al,(%rax)
  200e7c:	00 00                	add    %al,(%rax)
  200e7e:	00 00                	add    %al,(%rax)
  200e80:	06                   	(bad)  
  200e81:	00 00                	add    %al,(%rax)
  200e83:	00 00                	add    %al,(%rax)
  200e85:	00 00                	add    %al,(%rax)
  200e87:	00 b8 02 00 00 00    	add    %bh,0x2(%rax)
  200e8d:	00 00                	add    %al,(%rax)
  200e8f:	00 0a                	add    %cl,(%rdx)
  200e91:	00 00                	add    %al,(%rax)
  200e93:	00 00                	add    %al,(%rax)
  200e95:	00 00                	add    %al,(%rax)
  200e97:	00 89 00 00 00 00    	add    %cl,0x0(%rcx)
  200e9d:	00 00                	add    %al,(%rax)
  200e9f:	00 0b                	add    %cl,(%rbx)
  200ea1:	00 00                	add    %al,(%rax)
  200ea3:	00 00                	add    %al,(%rax)
  200ea5:	00 00                	add    %al,(%rax)
  200ea7:	00 18                	add    %bl,(%rax)
  200ea9:	00 00                	add    %al,(%rax)
  200eab:	00 00                	add    %al,(%rax)
  200ead:	00 00                	add    %al,(%rax)
  200eaf:	00 15 00 00 00 00    	add    %dl,0x0(%rip)        # 200eb5 <_DYNAMIC+0xc5>
	...
  200ebd:	00 00                	add    %al,(%rax)
  200ebf:	00 03                	add    %al,(%rbx)
	...
  200ec9:	10 20                	adc    %ah,(%rax)
  200ecb:	00 00                	add    %al,(%rax)
  200ecd:	00 00                	add    %al,(%rax)
  200ecf:	00 02                	add    %al,(%rdx)
  200ed1:	00 00                	add    %al,(%rax)
  200ed3:	00 00                	add    %al,(%rax)
  200ed5:	00 00                	add    %al,(%rax)
  200ed7:	00 30                	add    %dh,(%rax)
  200ed9:	00 00                	add    %al,(%rax)
  200edb:	00 00                	add    %al,(%rax)
  200edd:	00 00                	add    %al,(%rax)
  200edf:	00 14 00             	add    %dl,(%rax,%rax,1)
  200ee2:	00 00                	add    %al,(%rax)
  200ee4:	00 00                	add    %al,(%rax)
  200ee6:	00 00                	add    %al,(%rax)
  200ee8:	07                   	(bad)  
  200ee9:	00 00                	add    %al,(%rax)
  200eeb:	00 00                	add    %al,(%rax)
  200eed:	00 00                	add    %al,(%rax)
  200eef:	00 17                	add    %dl,(%rdi)
  200ef1:	00 00                	add    %al,(%rax)
  200ef3:	00 00                	add    %al,(%rax)
  200ef5:	00 00                	add    %al,(%rax)
  200ef7:	00 10                	add    %dl,(%rax)
  200ef9:	05 00 00 00 00       	add    $0x0,%eax
  200efe:	00 00                	add    %al,(%rax)
  200f00:	07                   	(bad)  
  200f01:	00 00                	add    %al,(%rax)
  200f03:	00 00                	add    %al,(%rax)
  200f05:	00 00                	add    %al,(%rax)
  200f07:	00 38                	add    %bh,(%rax)
  200f09:	04 00                	add    $0x0,%al
  200f0b:	00 00                	add    %al,(%rax)
  200f0d:	00 00                	add    %al,(%rax)
  200f0f:	00 08                	add    %cl,(%rax)
  200f11:	00 00                	add    %al,(%rax)
  200f13:	00 00                	add    %al,(%rax)
  200f15:	00 00                	add    %al,(%rax)
  200f17:	00 d8                	add    %bl,%al
  200f19:	00 00                	add    %al,(%rax)
  200f1b:	00 00                	add    %al,(%rax)
  200f1d:	00 00                	add    %al,(%rax)
  200f1f:	00 09                	add    %cl,(%rcx)
  200f21:	00 00                	add    %al,(%rax)
  200f23:	00 00                	add    %al,(%rax)
  200f25:	00 00                	add    %al,(%rax)
  200f27:	00 18                	add    %bl,(%rax)
  200f29:	00 00                	add    %al,(%rax)
  200f2b:	00 00                	add    %al,(%rax)
  200f2d:	00 00                	add    %al,(%rax)
  200f2f:	00 fb                	add    %bh,%bl
  200f31:	ff                   	(bad)  
  200f32:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f35:	00 00                	add    %al,(%rax)
  200f37:	00 00                	add    %al,(%rax)
  200f39:	00 00                	add    %al,(%rax)
  200f3b:	08 00                	or     %al,(%rax)
  200f3d:	00 00                	add    %al,(%rax)
  200f3f:	00 fe                	add    %bh,%dh
  200f41:	ff                   	(bad)  
  200f42:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f45:	00 00                	add    %al,(%rax)
  200f47:	00 18                	add    %bl,(%rax)
  200f49:	04 00                	add    $0x0,%al
  200f4b:	00 00                	add    %al,(%rax)
  200f4d:	00 00                	add    %al,(%rax)
  200f4f:	00 ff                	add    %bh,%bh
  200f51:	ff                   	(bad)  
  200f52:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f55:	00 00                	add    %al,(%rax)
  200f57:	00 01                	add    %al,(%rcx)
  200f59:	00 00                	add    %al,(%rax)
  200f5b:	00 00                	add    %al,(%rax)
  200f5d:	00 00                	add    %al,(%rax)
  200f5f:	00 f0                	add    %dh,%al
  200f61:	ff                   	(bad)  
  200f62:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f65:	00 00                	add    %al,(%rax)
  200f67:	00 02                	add    %al,(%rdx)
  200f69:	04 00                	add    $0x0,%al
  200f6b:	00 00                	add    %al,(%rax)
  200f6d:	00 00                	add    %al,(%rax)
  200f6f:	00 f9                	add    %bh,%cl
  200f71:	ff                   	(bad)  
  200f72:	ff 6f 00             	ljmp   *0x0(%rdi)
  200f75:	00 00                	add    %al,(%rax)
  200f77:	00 04 00             	add    %al,(%rax,%rax,1)
	...

Disassembly of section .got:

0000000000200fd0 <.got>:
	...
  200ff8:	40 05 00 00 00 00    	rex add $0x0,%eax
	...

Disassembly of section .got.plt:

0000000000201000 <_GLOBAL_OFFSET_TABLE_>:
  201000:	f0 0d 20 00 00 00    	lock or $0x20,%eax
	...
  201016:	00 00                	add    %al,(%rax)
  201018:	76 05                	jbe    20101f <_GLOBAL_OFFSET_TABLE_+0x1f>
  20101a:	00 00                	add    %al,(%rax)
  20101c:	00 00                	add    %al,(%rax)
  20101e:	00 00                	add    %al,(%rax)
  201020:	86 05 00 00 00 00    	xchg   %al,0x0(%rip)        # 201026 <_GLOBAL_OFFSET_TABLE_+0x26>
	...

Disassembly of section .data:

0000000000201028 <__data_start>:
	...

0000000000201030 <__dso_handle>:
  201030:	30 10                	xor    %dl,(%rax)
  201032:	20 00                	and    %al,(%rax)
  201034:	00 00                	add    %al,(%rax)
	...

Disassembly of section .bss:

0000000000201038 <__bss_start>:
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp (%r8),%spl
   5:	28 47 4e             	sub    %al,0x4e(%rdi)
   8:	55                   	push   %rbp
   9:	29 20                	sub    %esp,(%rax)
   b:	37                   	(bad)  
   c:	2e 32 2e             	xor    %cs:(%rsi),%ch
   f:	31 20                	xor    %esp,(%rax)
  11:	32 30                	xor    (%rax),%dh
  13:	31 37                	xor    %esi,(%rdi)
  15:	31 31                	xor    %esi,(%rcx)
  17:	32 32                	xor    (%rdx),%dh
  19:	00 47 43             	add    %al,0x43(%rdi)
  1c:	43 3a 20             	rex.XB cmp (%r8),%spl
  1f:	28 47 4e             	sub    %al,0x4e(%rdi)
  22:	55                   	push   %rbp
  23:	29 20                	sub    %esp,(%rax)
  25:	37                   	(bad)  
  26:	2e 32 2e             	xor    %cs:(%rsi),%ch
  29:	31 20                	xor    %esp,(%rax)
  2b:	32 30                	xor    (%rax),%dh
  2d:	31 37                	xor    %esi,(%rdi)
  2f:	31 31                	xor    %esi,(%rcx)
  31:	32 38                	xor    (%rax),%bh
	...
